if [ ! -d ./bin ]
then sudo mkdir bin
fi
cd ./bin
sudo rm -rf *

echo "Compiling Kernel ASM files..."
nasm -f aout ../../kernel/arch/i386/i386.asm -o i386.o
nasm -f aout ../../kernel/arch/i386/start.asm -o loader.o
nasm -f aout ../../kernel/arch/i386/cpuid.asm -o cpuid.o

echo "Compiling Kernel C Files..."
gcc -Wall -c ../../kernel/drivers/video.c -o video.o -fno-builtin
gcc -Wall -c ../../kernel/drivers/keyboard.c -o keyboard.o -fno-builtin
gcc -Wall -c ../../kernel/drivers/mouse.c -o mouse.o -fno-builtin
gcc -Wall -c ../../kernel/drivers/sound.c -o sound.o -fno-builtin
gcc -Wall -c ../../kernel/drivers/timer.c -o timer.o -fno-builtin
gcc -Wall -c ../../kernel/drivers/acpi.c -o acpi.o -fno-builtin
gcc -Wall -c ../../kernel/drivers/smbios.c -o smbios.o -fno-builtin
gcc -Wall -c ../../kernel/drivers/cpudet.c -o cpudet.o -fno-builtin
gcc -Wall -c ../../kernel/mm/pmm.c -o pmm.o -fno-builtin
gcc -Wall -c ../../kernel/mm/paging.c -o paging.o -fno-builtin
gcc -Wall -c ../../kernel/mm/kheap.c -o kheap.o -fno-builtin
gcc -Wall -c ../../kernel/main.c -o main.o -fno-builtin
gcc -Wall -c ../../kernel/interrupts.c -o interrupts.o -fno-builtin
gcc -Wall -c ../../kernel/klib.c -o klib.o -fno-builtin
gcc -Wall -c ../../kernel/syscalls.c -o syscalls.o -fno-builtin
gcc -Wall -c ../../kernel/gdt.c -o gdt.o -fno-builtin
gcc -Wall -c ../../kernel/idt.c -o idt.o -fno-builtin
gcc -Wall -c ../../kernel/panic.c -o panic.o -fno-builtin
gcc -Wall -c ../../kernel/events.c -o events.o -fno-builtin
gcc -Wall -c ../../kernel/extras.c -o extras.o -fno-builtin

echo "Compiling Userland ASM files..."
nasm -f aout ../../userland/syscall.asm -o syscall.o

echo "Compiling Userland C Files..."
gcc -Wall -c ../../userland/lib/ctype.c -o ctype.o -fno-builtin
gcc -Wall -c ../../userland/lib/stdio.c -o stdio.o -fno-builtin
gcc -Wall -c ../../userland/lib/stdlib.c -o stdlib.o -fno-builtin
gcc -Wall -c ../../userland/lib/string.c -o string.o -fno-builtin
gcc -Wall -c ../../userland/lib/math.c -o math.o -fno-builtin
gcc -Wall -c ../../userland/lib/ulib.c -o ulib.o -fno-builtin
gcc -Wall -c ../../userland/login.c -o login.o -fno-builtin
gcc -Wall -c ../../userland/shell.c -o shell.o -fno-builtin

if [ -f ../img/alebianOS.img ]; then
echo "Linkediting..."

if ld -T ../link.ld -o kernel.bin i386.o loader.o cpuid.o video.o keyboard.o mouse.o sound.o timer.o acpi.o smbios.o cpudet.o pmm.o paging.o kheap.o main.o interrupts.o klib.o syscalls.o gdt.o idt.o panic.o events.o extras.o syscall.o ctype.o stdio.o stdlib.o string.o math.o ulib.o login.o shell.o ; then
cd ..;

echo "Updating Disk Image";
sudo mount -o loop ./img/alebianOS.img /mnt;
sudo cp ./bin/kernel.bin /mnt/boot;
sudo umount /mnt;

echo "Proyect built";
else
echo ""
echo "Error building proyect";
echo ""
fi
else
echo "Disk Image not found."
fi

sudo mkdir -p isodir
sudo mkdir -p isodir/boot

if [ -f bin/kernel.bin ] && [ -f img/alebianOS.img ] && [ -f isodir/boot/grub/menu.lst ]; then
	sudo cp bin/kernel.bin isodir/boot/kernel.bin;
	sudo mkdir -p isodir/boot/grub;
	sudo cp grub.cfg isodir/boot/grub/grub.cfg;
	#sudo grub-mkrescue -o kernel.iso isodir;

	sudo cp /usr/lib/grub/i386-pc/stage2_eltorito  ./isodir/boot/grub/;
	echo " ";
	echo "Generating ISO...";
	echo " ";
	sudo genisoimage -R -input-charset iso8859-1 -b boot/grub/stage2_eltorito -no-emul-boot -boot-load-size 4 -boot-info-table -o alebianOS.iso isodir;
	echo " ";
	echo "ISO created.";
	echo " ";
else
echo "Error creating ISO";
echo "";
fi